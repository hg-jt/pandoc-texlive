%% notes.latex --- LaTeX template for simple notes.

% Options for packages loaded elsewhere
\PassOptionsToPackage{unicode$for(hyperrefoptions)$,$hyperrefoptions$$endfor$}{hyperref}
\PassOptionsToPackage{hyphens}{url}

$if(colorlinks)$
\PassOptionsToPackage{dvipsnames,svgnames,table,x11names}{xcolor}
$endif$
$if(CJKmainfont)$
\PassOptionsToPackage{space}{xeCJK}
$endif$

\documentclass[
$if(fontsize)$
  $fontsize$,
$endif$
$if(papersize)$
  $papersize$paper,
$endif$
$for(classoption)$
  $classoption$$sep$,
$endfor$
]{$documentclass$}


%% --------------------
%% BEGIN custom document configuration
%% --------------------
\usepackage[none]{hyphenat}                  % disable wrapping w/hyphens

$if(geometry)$
\usepackage[$for(geometry)$$geometry$$sep$,$endfor$]{geometry}
$else$
\usepackage[
  includeheadfoot,
  margin=1.5cm
]{geometry}                                  % smaller margins
$endif$

\frenchspacing                               % disable additional space after a period
\usepackage[parfill]{parskip}                % block paragraphs
\usepackage[sf,it,tiny]{titlesec}            % ss/bf titles w/minimal verticalmargins
\titleformat*{\section}{\large\bfseries\headerfamily}
\titleformat*{\subsection}{\bfseries\headerfamily}
\titleformat{\paragraph}[hang]{\small\itshape\headerfamily}{\theparagraph}{}{}

% alternate nested unordered lists w/bullets and endashes
\renewcommand{\labelitemii}{--}
\renewcommand{\labelitemiii}{\textbullet}
\renewcommand{\labelitemiv}{--}

\usepackage{mdframed}
\global\mdfdefinestyle{blockquote}{
  topline=false,
  rightline=false,
  bottomline=false,
  leftline=false,
  backgroundcolor=gray!20
}

\usepackage{etoolbox}
\patchcmd{\quote}{\rightmargin}{\leftmargin 0em \rightmargin}{}{}  % reduce quote indent
%\AtBeginEnvironment{quote}{\itshape\sffamily}  % quote block styling
\AtBeginEnvironment{quote}{\sffamily\noindent\begin{mdframed}[style=blockquote]}
\AtEndEnvironment{quote}{\end{mdframed}}
\AtBeginEnvironment{minipage}{\sffamily}      % table header styling
%% --------------------
%% END custom document configuration
%% --------------------


%% --------------------
%% BEGIN hacks
%% --------------------
% preserve @macros and define new global macros that expose the title, subtitle,
% and date outside of the maketitle command
\makeatletter
  \def \title#1{\gdef \@title{#1} \gdef \THETITLE{#1}}
  \def \subtitle#1{\gdef \@subtitle{#1} \gdef \THESUBTITLE{#1}}
  \def \author#1{\gdef \@author{#1} \gdef \THEAUTHOR{#1}}
  \def \date#1{\gdef \@date{#1} \gdef \THEDATE{#1}}
\makeatother
%% --------------------
%% END hacks
%% --------------------


%% --------------------
%% BEGIN custom title
%% --------------------
\usepackage{titling}
\pretitle{\begin{center}\LARGE\headerfamily\bfseries}
\posttitle{\par\end{center}}

% comment out if you want to include a by line in the title block
\preauthor{}
\postauthor{}

% comment out if you want to include a date in the title block
\predate{}
\postdate{}

% raise the title up (negative value). Default is 0.
\setlength{\droptitle}{-10em}
%% --------------------
%% END custom title
%% --------------------


%% --------------------
%% BEGIN custom headers/footers
%% --------------------
\usepackage{fancyhdr}                        % header and footer control
\fancypagestyle{titlepage}{
  \fancyhf{}                                   % clear header & footer settings
  \fancyhead[L]{\headerfamily{\textbf{\THETITLE}}}
$if(subtitle)$
  \fancyhead[C]{\headerfamily{\THESUBTITLE}}
$endif$
\fancyhead[R]{\headerfamily{\THEDATE}}
}
\pagestyle{fancy}                            % set header/footer style
\fancyhf{}                                   % clear header & footer settings
\fancyhead[L]{\headerfamily{\textbf{\THETITLE}}}
$if(subtitle)$
\fancyhead[C]{\headerfamily{\THESUBTITLE}}
$endif$
\fancyhead[R]{\headerfamily{\textit{\THEDATE}}}
\fancyfoot[C]{\thepage}
\thispagestyle{titlepage} % skip footer for first page

%% --------------------
%% END customer headers/footers
%% --------------------


%% --------------------
%% BEGIN pretty-source-code
%% --------------------
$if(listings)$
\usepackage{listings}
\newcommand{\passthrough}[1]{#1}
\lstset{defaultdialect=[5.3]Lua}
\lstset{defaultdialect=[x86masm]Assembler}

\usepackage{color}
\usepackage{xcolor}
\usepackage[font=sf]{caption}
\captionsetup{labelformat=empty}             % Remove "Figure" & "Listing" prefix

\usepackage{calc}

%\renewcommand{\ttdefault}{\codefamily}

\lstset{
    upquote=true,
    columns=fullflexible,
    keepspaces=true,
    showspaces=false,
    showtabs=false,
    showstringspaces=false,
    breaklines=true,
    %breakatwhitespace=true,
    literate={*}{*}1                         % fix awkwardly low asterix
             {-}{-}1,                        % fix copyability of dashes
    basicstyle=\small\codefamily,
    identifierstyle=\codefamily,
    %keywordstyle=\codefamily\bfseries,
    keywordstyle=\codefamily,
    commentstyle=\color{gray},
    xleftmargin=.25cm,
    %escapeinside={(*}{*)}                   % allow latex code in listing
}

\lstset{
    language=python,
    upquote=true,
    %keywordstyle=\codefamily\bfseries,
    %keywordstyle=\codefamily,
    %stringstyle=\color{red},
    morecomment=[s]{"""}{"""},
    morecomment=[s]{'''}{'''},
    commentstyle=\color{gray}\itshape
}

%% https://isocpp.org/wiki/faq/misc-environmental-issues#latex-macros
\newcommand{\CC}{C\nolinebreak\hspace{-.05em}\raisebox{.4ex}{\tiny\bf +}\nolinebreak\hspace{-.10em}\raisebox{.4ex}{\tiny\bf +}}
%\def\CC{{C\nolinebreak[4]\hspace{-.05em}\raisebox{.4ex}{\tiny\bf ++}}}

% separate lstinline and lstlistings
\makeatletter
\lst@AddToHook{TextStyle}{\let\lst@basicstyle\inlinecodefamily\selectfont}
\makeatother
$endif$
%% --------------------
%% END pretty-source-code
%% --------------------


%% --------------------
%% BEGIN custom fonts
%% --------------------
%\usepackage{amsmath,amssymb}
\newcommand{\square}{□}    % U+25A1
\newcommand{\boxtimes}{⊠}  % U+22A0 - uses a different box size in most fonts

$if(fontfamily)$
\usepackage[$for(fontfamilyoptions)$$fontfamilyoptions$$sep$,$endfor$]{$fontfamily$}
$else$
\usepackage{lmodern}
$endif$

$if(linestretch)$
\usepackage{setspace}
$endif$
\usepackage{iftex}
\ifPDFTeX
  \usepackage[$if(fontenc)$$fontenc$$else$T1$endif$]{fontenc}
  \usepackage[utf8]{inputenc}
  \usepackage{textcomp} % provide euro and other symbols
\else % if luatex or xetex
$if(mathspec)$
  \ifXeTeX
    \usepackage{mathspec} % this also loads fontspec
  \else
    \usepackage{unicode-math} % this also loads fontspec
  \fi
$else$
  \usepackage{unicode-math} % this also loads fontspec
$endif$
%  \defaultfontfeatures{Scale=MatchLowercase}$-- must come before Beamer theme
%  \defaultfontfeatures[\rmfamily]{Ligatures=TeX,Scale=1}
\fi

$if(fontfamily)$
$else$
$-- Set default font early so it can be overridden
\usepackage{lmodern}
$endif$

\usepackage{fontspec}   % enable fontspec (it should already be implicitly loaded)

\defaultfontfeatures{Scale=MatchLowercase}
%  \defaultfontfeatures[\rmfamily]{Ligatures=TeX,Scale=1}

% define custom font families
\newfontfamily{\headerfamily}[
  BoldFont={* SemiBold},
  BoldItalicFont={* SemiBold Italic}
]{Libre Franklin}

$if(codefont)$
\newfontfamily{\codefamily}[$for(codefontoptions)$$codefontoptions$$sep$,$endfor$]{$codefont$}
$else$
\newfontfamily{\codefamily}[
  Scale=MatchLowercase,    % also tried 0.8462 and 1
  ItalicFont={* Italic},
  BoldFont={* Semibold},
  BoldItalicFont={* Semibold Italic},
  Ligatures={NoCommon, NoDiscretionary, NoHistoric, NoRequired, NoContextual},
  Numbers={SlashedZero},
  ItalicFeatures={
    CharacterVariant={1:1} % double-story a (cv01)
  }
]{Source Code Pro}

\newfontfamily{\inlinecodefamily}[
  Scale=MatchLowercase,    % also tried 0.8462
  BoldFont={* Semibold},
  BoldItalicFont={* Semibold Italic},
  Ligatures={NoCommon, NoDiscretionary, NoHistoric, NoRequired, NoContextual},
  Numbers={SlashedZero}
]{Source Code Pro}
$endif$

% set default fonts
\setsansfont[
  BoldFont={*-Medium},
  BoldItalicFont={*-Medium Italic}
]{IBM Plex Sans}

\setromanfont[
  Ligatures=TeX,
  Scale=1,
  BoldFont={* Bold},
  ItalicFont={* Italic},
  BoldItalicFont={* Bold Italic}
]{Charis SIL}

\setmonofont[Scale=MatchLowercase]{Source Code Pro}
\setmathfont{IBM Plex Math}
%% --------------------
%% END custom fonts
%% --------------------
  
$if(mainfont)$
  \setmainfont[$for(mainfontoptions)$$mainfontoptions$$sep$,$endfor$]{$mainfont$}
$else$
  \renewcommand{\familydefault}{\sfdefault} % ss by default
$endif$


\ifPDFTeX\else
  % xetex/luatex font selection
$if(mainfont)$
  $if(mainfontfallback)$
    \ifLuaTeX
      \usepackage{luaotfload}
      \directlua{luaotfload.add_fallback("mainfontfallback",{
        $for(mainfontfallback)$"$mainfontfallback$"$sep$,$endfor$
      })}
    \fi
  $endif$
  \setmainfont[$for(mainfontoptions)$$mainfontoptions$$sep$,$endfor$$if(mainfontfallback)$,RawFeature={fallback=mainfontfallback}$endif$]{$mainfont$}
$else$
  \renewcommand{\familydefault}{\sfdefault} % ss by default
$endif$
$if(sansfont)$
  $if(sansfontfallback)$
    \ifLuaTeX
      \usepackage{luaotfload}
      \directlua{luaotfload.add_fallback("sansfontfallback",{
        $for(sansfontfallback)$"$sansfontfallback$"$sep$,$endfor$
      })}
    \fi
  $endif$
  \setsansfont[$for(sansfontoptions)$$sansfontoptions$$sep$,$endfor$$if(sansfontfallback)$,RawFeature={fallback=sansfontfallback}$endif$]{$sansfont$}
$endif$
$if(monofont)$
  $if(monofontfallback)$
    \ifLuaTeX
      \usepackage{luaotfload}
      \directlua{luaotfload.add_fallback("monofontfallback",{
        $for(monofontfallback)$"$monofontfallback$"$sep$,$endfor$
      })}
    \fi
  $endif$
  \setmonofont[$for(monofontoptions)$$monofontoptions$$sep$,$endfor$$if(monofontfallback)$,RawFeature={fallback=monofontfallback}$endif$]{$monofont$}
$endif$
$for(fontfamilies)$
  \newfontfamily{$fontfamilies.name$}[$for(fontfamilies.options)$$fontfamilies.options$$sep$,$endfor$]{$fontfamilies.font$}
$endfor$
$if(mathfont)$
$if(mathspec)$
  \ifXeTeX
    \setmathfont(Digits,Latin,Greek)[$for(mathfontoptions)$$mathfontoptions$$sep$,$endfor$]{$mathfont$}
  \else
    \setmathfont[$for(mathfontoptions)$$mathfontoptions$$sep$,$endfor$]{$mathfont$}
  \fi
$else$
  \setmathfont[$for(mathfontoptions)$$mathfontoptions$$sep$,$endfor$]{$mathfont$}
$endif$
$else$

$endif$
$if(CJKmainfont)$
  \ifXeTeX
    \usepackage{xeCJK}
    \setCJKmainfont[$for(CJKoptions)$$CJKoptions$$sep$,$endfor$]{$CJKmainfont$}
    $if(CJKsansfont)$
      \setCJKsansfont[$for(CJKoptions)$$CJKoptions$$sep$,$endfor$]{$CJKsansfont$}
    $endif$
    $if(CJKmonofont)$
      \setCJKmonofont[$for(CJKoptions)$$CJKoptions$$sep$,$endfor$]{$CJKmonofont$}
    $endif$
  \fi
$endif$
$if(luatexjapresetoptions)$
  \ifLuaTeX
    \usepackage[$for(luatexjapresetoptions)$$luatexjapresetoptions$$sep$,$endfor$]{luatexja-preset}
  \fi
$endif$
$if(CJKmainfont)$
  \ifLuaTeX
    \usepackage[$for(luatexjafontspecoptions)$$luatexjafontspecoptions$$sep$,$endfor$]{luatexja-fontspec}
    \setmainjfont[$for(CJKoptions)$$CJKoptions$$sep$,$endfor$]{$CJKmainfont$}
  \fi
$endif$
\fi
$if(zero-width-non-joiner)$
%% Support for zero-width non-joiner characters.
\makeatletter
\def\zerowidthnonjoiner{%
  % Prevent ligatures and adjust kerning, but still support hyphenating.
  \texorpdfstring{%
    \TextOrMath{\nobreak\discretionary{-}{}{\kern.03em}%
      \ifvmode\else\nobreak\hskip\z@skip\fi}{}%
  }{}%
}
\makeatother
\ifPDFTeX
  \DeclareUnicodeCharacter{200C}{\zerowidthnonjoiner}
\else
  \catcode`^^^^200c=\active
  \protected\def ^^^^200c{\zerowidthnonjoiner}
\fi
%% End of ZWNJ support
$endif$

% Use upquote if available, for straight quotes in verbatim environments
\IfFileExists{upquote.sty}{\usepackage{upquote}}{}
\IfFileExists{microtype.sty}{% use microtype if available
  \usepackage[$for(microtypeoptions)$$microtypeoptions$$sep$,$endfor$]{microtype}
  \UseMicrotypeSet[protrusion]{basicmath} % disable protrusion for tt fonts
}{}

$if(indent)$
$else$
\makeatletter
\@ifundefined{KOMAClassName}{% if non-KOMA class
  \IfFileExists{parskip.sty}{%
    \usepackage{parskip}
  }{% else
    \setlength{\parindent}{0pt}
    \setlength{\parskip}{6pt plus 2pt minus 1pt}}
}{% if KOMA class
  \KOMAoptions{parskip=half}}
\makeatother
$endif$

$if(verbatim-in-note)$
\usepackage{fancyvrb}
$endif$

\usepackage{xcolor}

$if(lhs)$
\lstnewenvironment{code}{\lstset{language=Haskell,basicstyle=\small\ttfamily}}{}
$endif$

$if(highlighting-macros)$
$highlighting-macros$
$endif$

$if(tables)$
\usepackage{longtable,booktabs,array}
$if(multirow)$
\usepackage{multirow}
$endif$
\usepackage{calc} % for calculating minipage widths

% Correct order of tables after \paragraph or \subparagraph
\usepackage{etoolbox}  % TODO: this was commented out before...why?
\makeatletter
\patchcmd\longtable{\par}{\if@noskipsec\mbox{}\fi\par}{}{}
\makeatother
% Allow footnotes in longtable head/foot
\IfFileExists{footnotehyper.sty}{\usepackage{footnotehyper}}{\usepackage{footnote}}
\makesavenoteenv{longtable}
$endif$  % end tables

$if(graphics)$
\usepackage{graphicx}
\makeatletter
\newsavebox\pandoc@box
\newcommand*\pandocbounded[1]{% scales image to fit in text height/width
  \sbox\pandoc@box{#1}%
  \Gscale@div\@tempa{\textheight}{\dimexpr\ht\pandoc@box+\dp\pandoc@box\relax}%
  \Gscale@div\@tempb{\linewidth}{\wd\pandoc@box}%
  \ifdim\@tempb\p@<\@tempa\p@\let\@tempa\@tempb\fi% select the smaller of both
  \ifdim\@tempa\p@<\p@\scalebox{\@tempa}{\usebox\pandoc@box}%
  \else\usebox{\pandoc@box}%
  \fi%
}
% Set default figure placement to htbp
\def\fps@figure{htbp}
\makeatother
$endif$

$if(svg)$
\usepackage{svg}
$endif$

$if(strikeout)$
$-- also used for underline
\ifLuaTeX
  \usepackage{luacolor}
  \usepackage[soul]{lua-ul}
\else
  \usepackage{soul}
$if(CJKmainfont)$
  \ifXeTeX
    % soul's \st doesn't work for CJK:
    \usepackage{xeCJKfntef}
    \renewcommand{\st}[1]{\sout{#1}}
  \fi
$endif$
\fi
$endif$

\setlength{\emergencystretch}{3em} % prevent overfull lines
\providecommand{\tightlist}{%
  \setlength{\itemsep}{0pt}\setlength{\parskip}{0pt}}
$if(numbersections)$
\setcounter{secnumdepth}{$if(secnumdepth)$$secnumdepth$$else$5$endif$}
$else$
\setcounter{secnumdepth}{-\maxdimen} % remove section numbering
$endif$

$if(subfigure)$
\usepackage{subcaption}
$endif$

$if(beamer)$
$else$
$if(block-headings)$
% Make \paragraph and \subparagraph free-standing
\makeatletter
\ifx\paragraph\undefined\else
  \let\oldparagraph\paragraph
  \renewcommand{\paragraph}{
    \@ifstar
      \xxxParagraphStar
      \xxxParagraphNoStar
  }
  \newcommand{\xxxParagraphStar}[1]{\oldparagraph*{#1}\mbox{}}
  \newcommand{\xxxParagraphNoStar}[1]{\oldparagraph{#1}\mbox{}}
\fi
\ifx\subparagraph\undefined\else
  \let\oldsubparagraph\subparagraph
  \renewcommand{\subparagraph}{
    \@ifstar
      \xxxSubParagraphStar
      \xxxSubParagraphNoStar
  }
  \newcommand{\xxxSubParagraphStar}[1]{\oldsubparagraph*{#1}\mbox{}}
  \newcommand{\xxxSubParagraphNoStar}[1]{\oldsubparagraph{#1}\mbox{}}
\fi
\makeatother
$endif$
$endif$

$if(pagestyle)$
\pagestyle{$pagestyle$}
$endif$

$if(csl-refs)$
% definitions for citeproc citations
\NewDocumentCommand\citeproctext{}{}
\NewDocumentCommand\citeproc{mm}{%
  \begingroup\def\citeproctext{#2}\cite{#1}\endgroup}
\makeatletter
 % allow citations to break across lines
 \let\@cite@ofmt\@firstofone
 % avoid brackets around text for \cite:
 \def\@biblabel#1{}
 \def\@cite#1#2{{#1\if@tempswa , #2\fi}}
\makeatother
\newlength{\cslhangindent}
\setlength{\cslhangindent}{1.5em}
\newlength{\csllabelwidth}
\setlength{\csllabelwidth}{3em}
\newenvironment{CSLReferences}[2] % #1 hanging-indent, #2 entry-spacing
 {\begin{list}{}{%
  \setlength{\itemindent}{0pt}
  \setlength{\leftmargin}{0pt}
  \setlength{\parsep}{0pt}
  % turn on hanging indent if param 1 is 1
  \ifodd #1
   \setlength{\leftmargin}{\cslhangindent}
   \setlength{\itemindent}{-1\cslhangindent}
  \fi
  % set entry spacing
  \setlength{\itemsep}{#2\baselineskip}}}
 {\end{list}}
\usepackage{calc}
\newcommand{\CSLBlock}[1]{\hfill\break\parbox[t]{\linewidth}{\strut\ignorespaces#1\strut}}
\newcommand{\CSLLeftMargin}[1]{\parbox[t]{\csllabelwidth}{\strut#1\strut}}
\newcommand{\CSLRightInline}[1]{\parbox[t]{\linewidth - \csllabelwidth}{\strut#1\strut}}
\newcommand{\CSLIndent}[1]{\hspace{\cslhangindent}#1}
$endif$
$if(lang)$
\ifLuaTeX
\usepackage[bidi=basic]{babel}
\else
\usepackage[bidi=default]{babel}
\fi
$if(babel-lang)$
\babelprovide[main,import]{$babel-lang$}
$if(mainfont)$
\ifPDFTeX
\else
\babelfont{rm}[$for(mainfontoptions)$$mainfontoptions$$sep$,$endfor$$if(mainfontfallback)$,RawFeature={fallback=mainfontfallback}$endif$]{$mainfont$}
\fi
$endif$
$endif$
$for(babel-otherlangs)$
\babelprovide[import]{$babel-otherlangs$}
$endfor$
$for(babelfonts/pairs)$
\babelfont[$babelfonts.key$]{rm}{$babelfonts.value$}
$endfor$
% get rid of language-specific shorthands (see #6817):
\let\LanguageShortHands\languageshorthands
\def\languageshorthands#1{}
$if(selnolig-langs)$
\ifLuaTeX
  \usepackage[$for(selnolig-langs)$$it$$sep$,$endfor$]{selnolig} % disable illegal ligatures
\fi
$endif$
$endif$

$for(header-includes)$
$header-includes$
$endfor$

%\ifLuaTeX
%  \usepackage{selnolig}  % disable illegal ligatures
%\fi
$if(dir)$
\ifPDFTeX
  \TeXXeTstate=1
  \newcommand{\RL}[1]{\beginR #1\endR}
  \newcommand{\LR}[1]{\beginL #1\endL}
  \newenvironment{RTL}{\beginR}{\endR}
  \newenvironment{LTR}{\beginL}{\endL}
\fi
$endif$


$if(natbib)$
\usepackage[$natbiboptions$]{natbib}
\bibliographystyle{$if(biblio-style)$$biblio-style$$else$plainnat$endif$}
$endif$

$if(biblatex)$
\usepackage[$if(biblio-style)$style=$biblio-style$,$endif$$for(biblatexoptions)$$biblatexoptions$$sep$,$endfor$]{biblatex}
$for(bibliography)$
\addbibresource{$bibliography$}
$endfor$
$endif$

$if(nocite-ids)$
\nocite{$for(nocite-ids)$$it$$sep$, $endfor$}
$endif$

$if(csquotes)$
\usepackage{csquotes}
$endif$

\usepackage{bookmark}
\IfFileExists{xurl.sty}{\usepackage{xurl}}{} % add URL line breaks if available
\urlstyle{$if(urlstyle)$$urlstyle$$else$same$endif$}

$if(links-as-notes)$
% Make links footnotes instead of hotlinks:
\DeclareRobustCommand{\href}[2]{#2\footnote{\url{#1}}}
$endif$

$if(verbatim-in-note)$
\VerbatimFootnotes % allow verbatim text in footnotes
$endif$

%\usepackage{hyperxmp}
\hypersetup{
$if(title-meta)$
  pdftitle={$title-meta$},
$endif$
$if(author-meta)$
  pdfauthor={$author-meta$},
$endif$
$if(copyright)$
  pdfcopyright={$copyright$},
$endif$
$if(lang)$
  pdflang={$lang$},
$endif$
$if(subject)$
  pdfsubject={$subject$},
$endif$
$if(keywords)$
  pdfkeywords={$for(keywords)$$keywords$$sep$, $endfor$},
$endif$
$if(colorlinks)$
  colorlinks=true,
  linkcolor={$if(linkcolor)$$linkcolor$$else$Maroon$endif$},
  filecolor={$if(filecolor)$$filecolor$$else$Maroon$endif$},
  citecolor={$if(citecolor)$$citecolor$$else$Blue$endif$},
  urlcolor={$if(urlcolor)$$urlcolor$$else$Blue$endif$},
$else$
$if(boxlinks)$
$else$
  hidelinks,
$endif$
$endif$
  pdfcreator={LaTeX via pandoc}
}

$if(title)$
\title{$title$$if(thanks)$\thanks{$thanks$}$endif$}
$endif$
$if(subtitle)$
$if(beamer)$
$else$
\usepackage{etoolbox}
\makeatletter
\providecommand{\subtitle}[1]{% add subtitle to \maketitle
  \apptocmd{\@title}{\par {\large #1 \par}}{}{}
}
\makeatother
$endif$
\subtitle{$subtitle$}
$endif$
\author{$for(author)$$author$$sep$ \and $endfor$}
\date{$date$}

\begin{document}
$if(has-frontmatter)$
\frontmatter
$endif$
$if(title)$
%\maketitle                                      % NOTE: disabled maketitle
$if(abstract)$
\begin{abstract}
$abstract$
\end{abstract}
$endif$
$endif$

$for(include-before)$
$include-before$

$endfor$
$if(toc)$
$if(toc-title)$
\renewcommand*\contentsname{$toc-title$}
$endif$

{
$if(colorlinks)$
\hypersetup{linkcolor=$if(toccolor)$$toccolor$$else$$endif$}
$endif$
\setcounter{tocdepth}{$toc-depth$}
\tableofcontents
}
$endif$

$if(lof)$
\listoffigures
$endif$
$if(lot)$
\listoftables
$endif$
$if(linestretch)$
\setstretch{$linestretch$}
$endif$
$if(has-frontmatter)$
\mainmatter
$endif$
$body$

$if(has-frontmatter)$
\backmatter
$endif$
$if(natbib)$
$if(bibliography)$
$if(biblio-title)$
$if(has-chapters)$
\renewcommand\bibname{$biblio-title$}
$else$
\renewcommand\refname{$biblio-title$}
$endif$
$endif$
  \bibliography{$for(bibliography)$$bibliography$$sep$,$endfor$}
$endif$
$endif$

$if(biblatex)$
\printbibliography$if(biblio-title)$[title=$biblio-title$]$endif$

$endif$
$for(include-after)$
$include-after$

$endfor$
\end{document}
